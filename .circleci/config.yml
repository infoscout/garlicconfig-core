version: 2.1

orbs:
  win: circleci/windows@2.2.0

aliases:
- &restore_cache
  keys:
  - cget-v1-{{ arch }}-{{ checksum "requirements.txt" }}
- &install_dependencies
  name: Install Dependencies
  command: sh init.sh
- &save_cache
  key:
    cget-v1-{{ arch }}-{{ checksum "requirements.txt" }}
  paths:
  - "cget"
- &build_from_source
  name: Build from source
  command: mkdir release && cd release && cmake .. -DBUILD_SHARED_LIB=ON && make
- &run_tests
  name: Run Tests
  command: ./release/tests/GarlicConfigTest


jobs:
  test-win32:
    executor: win/default
    steps:
    - checkout
    - run:
        name: "Install Python and Create Virtual Env"
        command: |
          nuget install python -Version 3.8.1 -ExcludeVersion -OutputDirectory .
          .\python\tools\python.exe --version
    - run:
        name: "Install Development Tools"
        command: "pip install cmake cget"
    - restore_cache: *restore_cache
    - run: *install_dependencies
    - save_cache: *save_cache
    - run:
        name: "Build From Source (Win32)"
        command: |
          mkdir release
          cd release
          cmake .. -DBUILD_SHARED_LIB=ON
          msbuild GarlicConfig.sln /t:Build /p:Configuration=Release
    - run:
        name: "Run Tests (Win32)"
        command: |
          cd release/tests/Release
          .\GarlicConfigTest.exe

  test-alpine-linux:
    docker:
    - image: peymanmo/garlicconfig-alpine
    steps:
    - checkout
    - restore_cache:
        keys:
            - cget-alpine-{{ checksum "requirements.txt" }}
    - run: *install_dependencies
    - save_cache:
        key:
            cget-alpine-{{ checksum "requirements.txt" }}
        paths:
        - "cget"
    - run: *build_from_source
    - run: *run_tests

  test-linux:
    docker:
    - image: peymanmo/many_x64
    steps:
    - checkout
    - restore_cache: *restore_cache
    - run: *install_dependencies
    - save_cache: *save_cache
    - run: *build_from_source
    - run: *run_tests

  test-mac:
    macos:
      xcode: "10.0.0"
    steps:
    - run:
        name: "Install Homebrew"
        command: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    - run:
        name: "Install Development Tools"
        command: "pip install cmake cget"
    - run:
        name: "Install GCC"
        command: "brew install gcc"
    - checkout
    - run:
        name: "Setup Environment Variables"
        command: |
          echo 'export CXX=/usr/local/Cellar/gcc/9.2.0_3/bin/g++-9' >> $BASH_ENV
          echo 'export CC=/usr/local/Cellar/gcc/9.2.0_3/bin/gcc-9' >> $BASH_ENV
          echo 'export DYLD_LIBRARY_PATH=$(pwd)/cget/lib' >> $BASH_ENV
    - restore_cache: *restore_cache
    - run: *install_dependencies
    - save_cache: *save_cache
    - run: *build_from_source
    - run: *run_tests

workflows:
  version: 2
  pr-checks:
    jobs:
    - test-linux
    - test-alpine-linux
    - test-mac
    - test-win32
